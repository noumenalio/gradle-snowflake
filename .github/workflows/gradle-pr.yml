name: Run Gradle on PRs

on:
  pull_request

env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

jobs:
  gradle_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

#      - id: echo_environment
#        run: ./echo-environment.sh
#        name: "Echo environment"
#        shell: bash

      - id: gradle_properties
        run: |
             mkdir -p $HOME/.gradle
             echo "$GRADLE_PROPERTIES" > $HOME/.gradle/gradle.properties
        name: 'Write gradle.properties file'
        shell: bash
        env:
          GRADLE_PROPERTIES: ${{secrets.GRADLE_PROPERTIES}}

      - id: snowsql_config
        run: |
             mkdir -p $HOME/.snowsql
             echo "$SNOW_CONFIG" > $HOME/.snowsql/config
        name: 'Write .snowsql/config file'
        shell: bash
        env:
          SNOW_CONFIG: ${{secrets.SNOW_CONFIG}}

      - id: google_auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - id: gradle_setup
        name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - id: gradle_build
        name: Gradle build and test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build validatePlugin functionalTest integrationTest buildDashboard --scan

      - id: publish_tests
        name: Publish tests
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

  run_example:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [java, java-manual, java-external-stage, java-testing, groovy, scala, kotlin]
      fail-fast: true
      max-parallel: 1

    steps:
      # Should really make these reusable
      - uses: actions/checkout@v3

      - id: gradle_properties
        run: |
          mkdir -p $HOME/.gradle
          echo "$GRADLE_PROPERTIES" > $HOME/.gradle/gradle.properties
        name: 'Write gradle.properties file'
        shell: bash
        env:
          GRADLE_PROPERTIES: ${{secrets.GRADLE_PROPERTIES}}

      - id: snowsql_config
        run: |
          mkdir -p $HOME/.snowsql
          echo "$SNOW_CONFIG" > $HOME/.snowsql/config
        name: 'Write .snowsql/config file'
        shell: bash
        env:
          SNOW_CONFIG: ${{secrets.SNOW_CONFIG}}

      - name: ${{ matrix.directory }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: matrixStrategy
          build-root-directory: examples/${{ matrix.directory }}
